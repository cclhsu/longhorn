apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "nfs-install.fullname" . }}
  # namespace: kube-system
  labels:
    {{- include "nfs-install.labels" . | nindent 4 }}
  annotations:
  {{- if eq .Values.initPodAnnotations.command_type "server" }}
    command: &cmd OS=$(grep "ID_LIKE" /etc/os-release | cut -d '=' -f 2); if [[ "${OS}" == *"debian"* ]]; then sudo apt-get update -q -y && sudo apt-get install -q -y {{ .Values.initPodAnnotations.server_command.debain_package }} && sudo systemctl -q enable {{ .Values.initPodAnnotations.server_command.debain_service }} && sudo systemctl start {{ .Values.initPodAnnotations.server_command.debain_service }}; elif [[ "${OS}" == *"suse"* ]]; then sudo zypper --gpg-auto-import-keys -q refresh && sudo zypper --gpg-auto-import-keys -q install -y {{ .Values.initPodAnnotations.server_command.suse_package }} && sudo systemctl -q enable {{ .Values.initPodAnnotations.server_command.suse_service }} && sudo systemctl start {{ .Values.initPodAnnotations.server_command.suse_service }}; else sudo yum makecache fast -q -y && sudo yum --setopt=tsflags=noscripts install -q -y {{ .Values.initPodAnnotations.server_command.suse_package }} && sudo systemctl -q enable {{ .Values.initPodAnnotations.server_command.suse_service }} && sudo systemctl start {{ .Values.initPodAnnotations.server_command.suse_service }}; fi && if [ $? -eq 0 ]; then echo "{{ .Values.initPodAnnotations.server_command.package }} install successfully"; else echo "{{ .Values.initPodAnnotations.server_command.package }} install failed error code $?"; fi
  {{- else }}
    command: &cmd OS=$(grep "ID_LIKE" /etc/os-release | cut -d '=' -f 2); if [[ "${OS}" == *"debian"* ]]; then sudo apt-get update -q -y && sudo apt-get install -q -y {{ .Values.initPodAnnotations.client_command.debain_package }}; elif [[ "${OS}" == *"suse"* ]]; then sudo zypper --gpg-auto-import-keys -q refresh && sudo zypper --gpg-auto-import-keys -q install -y {{ .Values.initPodAnnotations.client_command.suse_package }}; else sudo yum makecache fast -q -y && sudo yum --setopt=tsflags=noscripts install -q -y {{ .Values.initPodAnnotations.client_command.suse_package }}; fi && if [ $? -eq 0 ]; then echo "{{ .Values.initPodAnnotations.client_command.package }} install successfully"; else echo "{{ .Values.initPodAnnotations.client_command.package }} install failed error code $?"; fi
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "nfs-install.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nfs-install.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nfs-install.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: {{ .Chart.Name }}-init-container
        command:
          - nsenter
          - --mount=/proc/1/ns/mnt
          - --
          - bash
          - -c
          - *cmd
        image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag | default .Chart.AppVersion }}"
        securityContext:
          privileged: true
      containers:
        - name: {{ .Chart.Name }}-container
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      hostNetwork: true
      hostPID: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  updateStrategy:
    type: RollingUpdate
